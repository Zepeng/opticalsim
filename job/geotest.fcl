#include "job/geometry.fcl"

process_name: testGeo

services:
{
  # Load the service that manages root files for histograms.
  # TFileService: { fileName: "reco_hist.root"         }
  #scheduler:    { wantTracer: false wantSummary: true }
  #Timing:       {}
  #SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  #RandomNumberGenerator: {} #ART native random number generator
  user: {}
}

services.user.Geometry: @local::detector_geo

source:
{
  module_type: EmptyEvent
  maxEvents:   1       # Number of events to create
}

outputs:
{
}

physics:
{

 analyzers:
 {
  geotest: { module_type: "GeometryTest" }
 }

 #define the path for analyzer modules, order does not matter.
 #see lines starting physics.analyzers below
 ana:  [ geotest ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ ] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ana]  
}


# Uncomment if you want to check for overlaps
# physics.analyzers.geotest.CheckForOverlaps: true 
